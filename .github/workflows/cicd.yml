name: SPAM Detection CI/CD

on:
  push:
    branches: [ "main" ]

env:
  ECR_REGISTRY_1: ${{ secrets.ECR_REGISTRY_1 }}
  ECR_REGISTRY_2: ${{ secrets.ECR_REGISTRY_2 }}
  IMAGE_TAG: ${{ github.run_number }}
  REPOSITORY_1: django-app
  REPOSITORY_2: mysql-db-repo
  BUILD_1: spam-detection-web-app
  BUILD_2: spam-mysql-db

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Source
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: 'ap-south-1'

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        
      - name: Build Image
        run: | 
          docker-compose build spam-mysql-db
          docker-compose build spam-detection-web-app
          
      - name: Tag and push image to ECR_REGISTRY
        run: |
          docker tag $BUILD_1:latest $ECR_REGISTRY_1/$REPOSITORY_1:$IMAGE_TAG
          docker push $ECR_REGISTRY_1/$REPOSITORY_1:$IMAGE_TAG
          
          docker tag $BUILD_2:latest $ECR_REGISTRY_2/$REPOSITORY_2:$IMAGE_TAG
          docker push $ECR_REGISTRY_2/$REPOSITORY_2:$IMAGE_TAG          
        

        
      # - name: Fill in the new image ID in the Amazon ECS task definition
      #   id: task-def
      #   uses: aws-actions/amazon-ecs-render-task-definition@v1
      #   with:
      #     task-definition: spam-detection-webapp-task-definition.json 
      #     container-name1: spam-detection-web-app
      #     image1: $ECR_REGISTRY_1/$REPOSITORY1:$IMAGE_TAG  
      #     container-name2: spam-mysql-db
      #     image2: $ECR_REGISTRY_2/$REPOSITORY2:$IMAGE_TAG
      #     file: ecs-task-def-updated.json
          
      # - name: Deploy Amazon ECS task definition
      #   uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      #   with:
      #     task-definition: ecs-task-def-updated.json
      #     service: spam-detection-webapp-serv-ice
      #     cluster: ECS-SPAM-Cluster
      #     wait-for-service-stability: true    
  
  
  #   - name: Remove old Docker images
  #     run: docker system prune -a --force
    
      
  # deploy:
  #   needs: build
  #   runs-on: self-hosted
    
  #   steps:     
  #     - name: Pull image from dockerhub
  #       run: |
  #         docker pull cyberbhavin/spam-docker-images:latest
  #         docker pull cyberbhavin/spam-mysqldb:latest
          
  #     - name: Delete Old Container and Images
  #       run: |
  #         docker rm -f spam-docker-images
  #         docker rm -f spam-mysqldb
  #         docker images --filter dangling=true -q | xargs -r docker rmi
      
  #     - name: Run new Container
  #       run: |
  #         docker volume create mysql_data
  #         docker run -d -p 3307:3306 --name spam-mysqldb -v mysql_data:/var/lib/mysql/ -e MYSQL_ROOT_PASSWORD={{secrets.MYSQL_ROOT_PASSWORD}} cyberbhavin/spam-mysqldb:latest
  #         docker run -d -p 8000:8000 --name spam-docker-images --link spam-mysqldb:external-mysql cyberbhavin/spam-docker-images:latest